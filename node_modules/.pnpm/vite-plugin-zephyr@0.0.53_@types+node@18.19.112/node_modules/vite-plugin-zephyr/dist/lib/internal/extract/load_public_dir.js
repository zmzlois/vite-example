"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.load_public_dir = load_public_dir;
const node_fs_1 = require("node:fs");
const node_path_1 = require("node:path");
const vite_1 = require("vite");
const node_util_1 = require("node:util");
async function load_public_dir(props) {
    const { publicDir, outDir } = props;
    const publicAssets = [];
    const loadDir = async (srcDir, destDir) => {
        for (const file of (0, node_fs_1.readdirSync)(srcDir)) {
            const srcFile = (0, node_path_1.resolve)(srcDir, file);
            if (srcFile === destDir) {
                continue;
            }
            const destFile = (0, node_path_1.resolve)(destDir, file);
            const stat = (0, node_fs_1.statSync)(srcFile);
            if (stat.isDirectory()) {
                await loadDir(srcFile, destFile);
            }
            else {
                publicAssets.push({
                    name: (0, node_path_1.basename)(file),
                    names: [(0, node_path_1.basename)(file)],
                    needsCodeReference: false,
                    source: await (0, node_util_1.promisify)(node_fs_1.readFile)(srcFile),
                    type: 'asset',
                    fileName: (0, vite_1.normalizePath)((0, node_path_1.relative)(outDir, destFile)),
                    originalFileName: (0, node_path_1.basename)(file),
                    originalFileNames: [(0, node_path_1.basename)(file)],
                });
            }
        }
    };
    await loadDir(publicDir, outDir);
    return publicAssets;
}
//# sourceMappingURL=load_public_dir.js.map