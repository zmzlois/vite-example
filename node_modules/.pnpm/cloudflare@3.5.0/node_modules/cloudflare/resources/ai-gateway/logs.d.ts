import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
import * as LogsAPI from "./logs.js";
import { V4PagePaginationArray, type V4PagePaginationArrayParams } from "../../pagination.js";
export declare class Logs extends APIResource {
    /**
     * List Gateway Logs
     */
    list(id: string, params: LogListParams, options?: Core.RequestOptions): Core.PagePromise<LogListResponsesV4PagePaginationArray, LogListResponse>;
}
export declare class LogListResponsesV4PagePaginationArray extends V4PagePaginationArray<LogListResponse> {
}
export interface LogListResponse {
    id: string;
    cached: boolean;
    created_at: string;
    duration: number;
    model: string;
    path: string;
    provider: string;
    request: string;
    response: string;
    success: boolean;
    tokens_in: number;
    tokens_out: number;
    metadata?: string;
    request_content_type?: string;
    request_type?: string;
    response_content_type?: string;
    status_code?: number;
    step?: number;
}
export interface LogListParams extends V4PagePaginationArrayParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Query param:
     */
    cached?: boolean;
    /**
     * Query param:
     */
    direction?: 'asc' | 'desc';
    /**
     * Query param:
     */
    end_date?: string;
    /**
     * Query param:
     */
    order_by?: 'created_at' | 'provider';
    /**
     * Query param:
     */
    search?: string;
    /**
     * Query param:
     */
    start_date?: string;
    /**
     * Query param:
     */
    success?: boolean;
}
export declare namespace Logs {
    export import LogListResponse = LogsAPI.LogListResponse;
    export import LogListResponsesV4PagePaginationArray = LogsAPI.LogListResponsesV4PagePaginationArray;
    export import LogListParams = LogsAPI.LogListParams;
}
//# sourceMappingURL=logs.d.ts.map