"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getApplicationHashList = getApplicationHashList;
const get_application_configuration_1 = require("./get-application-configuration");
const http_request_1 = require("../http/http-request");
const errors_1 = require("../errors");
async function getApplicationHashList({ application_uid, }) {
    const { EDGE_URL } = await (0, get_application_configuration_1.getApplicationConfiguration)({
        application_uid,
    });
    const url = new URL('/__get_application_hash_list__', EDGE_URL);
    url.searchParams.append('application_uid', application_uid);
    const [ok, cause, data] = await (0, http_request_1.makeRequest)(url, { method: 'GET' });
    // No point into returning an empty array since if this request fails
    // means the edge is not working properly and we won't be able to upload
    // things anyway
    if (!ok || !(data === null || data === void 0 ? void 0 : data.hashes)) {
        throw new errors_1.ZephyrError(errors_1.ZeErrors.ERR_GET_APPLICATION_HASH_LIST, {
            cause,
            data: Object.assign(Object.assign({}, data), { url: url.toString() }),
        });
    }
    return data;
}
//# sourceMappingURL=get-application-hash-list.js.map