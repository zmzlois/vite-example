"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.zeUploadBuildStats = zeUploadBuildStats;
const zephyr_edge_contract_1 = require("zephyr-edge-contract");
const errors_1 = require("../errors");
const http_request_1 = require("../http/http-request");
const logging_1 = require("../logging");
const debug_1 = require("../logging/debug");
const token_1 = require("../node-persist/token");
/** Returns true if build stats are uploaded successfully, false otherwise. */
async function zeUploadBuildStats(dashData) {
    // Add dots here to indicate this is an async operation
    logging_1.ze_log.upload(`${debug_1.dimmedName} Uploading build stats to Zephyr...`);
    const token = await (0, token_1.getToken)();
    const url = new URL(zephyr_edge_contract_1.ze_api_gateway.build_stats, (0, zephyr_edge_contract_1.ZE_API_ENDPOINT)());
    const [ok, cause, res] = await (0, http_request_1.makeRequest)(url, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${token}`,
            Accept: 'application/json',
        },
    }, JSON.stringify(dashData));
    if (!ok || res.status !== 'ok') {
        throw new errors_1.ZephyrError(errors_1.ZeErrors.ERR_FAILED_UPLOAD, {
            type: 'build stats',
            cause,
            data: {
                url: url.toString(),
            },
        });
    }
    logging_1.ze_log.upload('Build stats uploaded to Zephyr...');
    return true;
}
//# sourceMappingURL=ze-upload-build-stats.js.map