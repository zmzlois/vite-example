"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.zeEnableSnapshotOnEdge = zeEnableSnapshotOnEdge;
const upload_envs_1 = require("../http/upload-envs");
const logging_1 = require("../logging");
const debug_1 = require("../logging/debug");
const picocolor_1 = require("../logging/picocolor");
const ze_log_event_1 = require("../logging/ze-log-event");
async function zeEnableSnapshotOnEdge(props) {
    const { pluginOptions, envs_jwt, zeStart } = props;
    logging_1.ze_log.snapshot('Enabling snapshot on edge...');
    const logEvent = (0, ze_log_event_1.logger)(pluginOptions);
    await (0, upload_envs_1.uploadEnvs)({
        body: envs_jwt,
        application_uid: pluginOptions.application_uid,
        logEvent,
    });
    const urls = envs_jwt.urls
        .reverse()
        .map((url, i) => `${debug_1.brightBlueBgName}  -> ${i === 0 ? (0, picocolor_1.cyanBright)(url) : (0, picocolor_1.blackBright)(url)}`)
        .join('\n');
    logEvent({
        level: 'info',
        action: 'build:deploy:done',
        message: `Deployment took ${(0, picocolor_1.yellow)(`${Date.now() - zeStart}`)}ms`,
    }, {
        level: 'trace',
        action: 'deploy:url',
        message: `Deploying to edge:\n${urls}\n`,
    });
    logging_1.ze_log.snapshot('Build successfully deployed to edge...');
}
//# sourceMappingURL=ze-enable-snapshot-on-edge.js.map