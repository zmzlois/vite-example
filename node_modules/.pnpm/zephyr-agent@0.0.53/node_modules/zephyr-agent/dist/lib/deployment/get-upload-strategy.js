"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUploadStrategy = getUploadStrategy;
const errors_1 = require("../errors");
const upload_provider_options_1 = require("../node-persist/upload-provider-options");
const index_1 = require("./index");
function getUploadStrategy(platform) {
    switch (platform) {
        case upload_provider_options_1.UploadProviderType.CLOUDFLARE:
            return index_1.cloudflareStrategy;
        case upload_provider_options_1.UploadProviderType.NETLIFY:
            return index_1.netlifyStrategy;
        case upload_provider_options_1.UploadProviderType.FASTLY:
            return index_1.fastlyStrategy;
        default:
            throw new errors_1.ZephyrError(errors_1.ZeErrors.ERR_UNKNOWN, {
                message: 'Unsupported upload provider.',
                data: {
                    platform,
                },
            });
    }
}
//# sourceMappingURL=get-upload-strategy.js.map